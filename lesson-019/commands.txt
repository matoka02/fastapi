1. проверить образ
docker image ls
2. удалить лишний образ
docker rm image_name or id / docker rmi $(docker images -a -q)
3. создать образ Postgres
docker pull postgres

4. создать папку pg_data в C:\Users\kuram\Desktop, затем в терминале  создать контенейр
# linux
docker run -itd -e POSTGRES_USER=postgres -e POSTGRES_PASSWORD=123321 -p 5432:5432 -v /Users/dmytro.buzoveria/Desktop/pg_data:/var/lib/postgresql/data --name postgresql postgres
# windows
docker run -itd -e POSTGRES_USER=postgres -e POSTGRES_PASSWORD=Lain2010 -p 5432:5432 -v "C:\Users\kuram\Desktop\pg_data:/var/lib/postgresql/data" --name postgresql postgres

5. переход в оболочку контейнера
docker exec -it postgresql bash
6. и сразу заход в оболочку postgres
psql -h localhost -U postgres
7. просмотр содержимого postgres
\l
8. соединение с базой postgres
\c postgres
9. запуск контейнера с приложением
 docker-compose up --build
10. проверяем в docker desktop, чтобы был только образ postgres, контейнеры удаляем
11. сборка образа для публикации в репозиторий docker hub
docker build -t matoka02/fastapi .
12. публикация образа
docker push matoka02/fastapi:latest

docker inspect postgresql

